"""
Django settings for mi_proyecto project.
Generated by 'django-admin startproject' using Django 5.2.
"""

from pathlib import Path
import os
import dj_database_url

# BASE_DIR para rutas del proyecto
BASE_DIR = Path(__file__).resolve().parent.parent

# ===========================
# Configuración general
# ===========================

SECRET_KEY = os.environ.get('SECRET_KEY', default='your seceret key') 

DEBUG = os.environ.get('DEBUG', 'False') == 'True'  # Mejor controlar DEBUG con variable de entorno


ALLOWED_HOSTS = ['*']
RENDER_EXTERNAL_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
if RENDER_EXTERNAL_HOSTNAME:
    ALLOWED_HOSTS.append(RENDER_EXTERNAL_HOSTNAME)


# ===========================
# Aplicaciones instaladas
# ===========================

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    "debug_toolbar",
    'django.contrib.staticfiles',
    'rest_framework',
    'django_extensions',


    # Apps locales
    'cineBox',
]

# ===========================
# Middleware
# ===========================

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Para servir archivos estáticos en producción
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# ===========================
# Configuración de URLs y WSGI
# ===========================

ROOT_URLCONF = 'mi_proyecto.urls'

WSGI_APPLICATION = 'mi_proyecto.wsgi.application'

# ===========================
# Templates
# ===========================

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# ===========================
# Base de datos
# ===========================

DATABASES = {
    'default': dj_database_url.config(
        default='sqlite:///{}'.format(BASE_DIR / 'db.sqlite3'),  # fallback a SQLite local
        conn_max_age=600,
        ssl_require=True  # Recomendado en producción para conexiones seguras
    )
}             
# ===========================
# Validadores de contraseña
# ===========================

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# ===========================
# Internacionalización
# ===========================

LANGUAGE_CODE = 'es-es'
TIME_ZONE = 'America/Lima'
USE_I18N = True
USE_TZ = True

# ===========================
# Archivos estáticos y media
# ===========================

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Para collectstatic
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

if not DEBUG:
    STATIC_ROOT = os.path.join(BASE_DIR, 'cineBox/static')  # Para producción
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'  # Para servir archivos estáticos con Whitenoise

MEDIA_URL = '/media/'

# En producción, apunta a volumen persistente o almacenamiento externo
if not DEBUG:
    MEDIA_ROOT = '/mnt/media'  # Ruta del volumen persistente montado en Render
else:
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# ===========================
# Autenticación
# ===========================

LOGIN_URL = 'login'  # nombre de la URL para login
LOGIN_REDIRECT_URL = 'home'  # redirección por defecto tras login

AUTH_USER_MODEL = 'cineBox.Usuario'  # modelo personalizado

AUTHENTICATION_BACKENDS = [
    'cineBox.backends.EmailBackend',
    'django.contrib.auth.backends.ModelBackend',  # Permite compatibilidad con el admin y permisos
]

# ===========================
# Otras configuraciones
# ===========================

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# settings.py

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'r99190591@gmail.com'          # Cambia esto
EMAIL_HOST_PASSWORD = 'kout vsee dxog cswn'     # No la contraseña normal, sino una contraseña de aplicación
DEFAULT_FROM_EMAIL = 'CineBox <r99190591@gmail.com>'


INTERNAL_IPS = [
    # ...
    "127.0.0.1",
    # ...
]

SITE_URL = 'http://localhost:8000' 

USE_TZ = True 

